import { REMOTE_URL, REMOTE_WSS_URL } from "./loadConfig";

export const SERVER_PORTS = {
  BACKEND_PORT: 3000,
  STRATEGY_ANALYZER_PORT: 3002,
  POSITION_MANAGER_PORT: 3003,
  DATA_FILLERS_PORT: 3004,
  MARKETS_MONITOR_PORT: 3005,
  NOTIFICATIONS_SYSTEM_PORT: 3006,
  LIVE_BOT_PORT: 3007,
  CENTRALIZATION_PORT: 8000,
};

export const PROJECT_URLS = {
  BACKEND_URL: REMOTE_URL + ":" + SERVER_PORTS.BACKEND_PORT,
  BACKEND_WEBSOCKET: REMOTE_WSS_URL + ":" + SERVER_PORTS.BACKEND_PORT + "/ws",
  STRATEGY_ANALYZER_URL: REMOTE_URL + ":" + SERVER_PORTS.STRATEGY_ANALYZER_PORT,
  POSITION_MANAGER_URL: REMOTE_URL + ":" + SERVER_PORTS.POSITION_MANAGER_PORT,
  CENTRALIZATION_URL: "centralization." + REMOTE_URL,
  DATA_FILLERS_URL: REMOTE_URL + ":" + SERVER_PORTS.DATA_FILLERS_PORT,
  MARKETS_MONITOR_URL: REMOTE_URL + ":" + SERVER_PORTS.MARKETS_MONITOR_PORT,
  LIVE_BOT_URL: REMOTE_URL + ":" + SERVER_PORTS.LIVE_BOT_PORT,
  NOTIFICATIONS_URL: REMOTE_URL + ":" + SERVER_PORTS.NOTIFICATIONS_SYSTEM_PORT,
};

if (REMOTE_URL.includes("127.0.0.1") || REMOTE_URL.includes("localhost")) {
  PROJECT_URLS.CENTRALIZATION_URL =
    REMOTE_URL + ":" + SERVER_PORTS.CENTRALIZATION_PORT;
}

export const NOTIFICATIONS_ENDPOINTS = {
  HEALTH: "/health",
  SEND_NOTIFICATION: "/notify",
};

export const NOTIFICATIONS_URLS = {
  ROOT: PROJECT_URLS.NOTIFICATIONS_URL,
  HEALTH: PROJECT_URLS.NOTIFICATIONS_URL + NOTIFICATIONS_ENDPOINTS.HEALTH,
  SEND_NOTIFICATION:
    PROJECT_URLS.NOTIFICATIONS_URL + NOTIFICATIONS_ENDPOINTS.SEND_NOTIFICATION,
};

export const DATA_FILLERS_ENDPOINTS = {
  HEALTH: "/health",
  CLEAR_DATABASE: "/clearDB",
  FILL_ALL_HISTORICAL_DATA: "/api/fillAllHistoricalData",
  STOP_FILL: "/api/stopFill",
  FILL_HISTORICAL_DATA: "/api/fillHistoricalData",
  FILL_WEBSOCKET: "/api/fillWs",
};

export const DATA_FILLER_URLS = {
  ROOT: PROJECT_URLS.DATA_FILLERS_URL,
  HEALTH: PROJECT_URLS.DATA_FILLERS_URL + DATA_FILLERS_ENDPOINTS.HEALTH,
  CLEAR_DATABASE:
    PROJECT_URLS.DATA_FILLERS_URL + DATA_FILLERS_ENDPOINTS.CLEAR_DATABASE,
  FILL_WEBSOCKET:
    PROJECT_URLS.DATA_FILLERS_URL + DATA_FILLERS_ENDPOINTS.FILL_WEBSOCKET,
  FILL_ALL_HISTORICAL_DATA:
    PROJECT_URLS.DATA_FILLERS_URL +
    DATA_FILLERS_ENDPOINTS.FILL_ALL_HISTORICAL_DATA,
  FILL_HISTORICAL_DATA:
    PROJECT_URLS.DATA_FILLERS_URL + DATA_FILLERS_ENDPOINTS.FILL_HISTORICAL_DATA,
};

export const MARKETS_MONITOR_ENDPOINTS = {
  HEALTH: "/health",
  START: "/startMonitoring",
  STOP: "/stopMonitoring",
  RECONNECT_BROKER: "/reconnect",
};

export const MARKETS_MONITOR_URLS = {
  ROOT: PROJECT_URLS.MARKETS_MONITOR_URL,
  HEALTH: PROJECT_URLS.MARKETS_MONITOR_URL + MARKETS_MONITOR_ENDPOINTS.HEALTH,
  CONNECTION_WEBSOCKET:
    REMOTE_WSS_URL + ":" + SERVER_PORTS.MARKETS_MONITOR_PORT + "/ws",
  START_MONITORING:
    PROJECT_URLS.MARKETS_MONITOR_URL + MARKETS_MONITOR_ENDPOINTS.START,
  STOP_MONITORING:
    PROJECT_URLS.MARKETS_MONITOR_URL + MARKETS_MONITOR_ENDPOINTS.STOP,
  RECONNECT_BROKER:
    PROJECT_URLS.MARKETS_MONITOR_URL +
    MARKETS_MONITOR_ENDPOINTS.RECONNECT_BROKER,
};

export const BACKEND_ENDPOINTS = {
  HEALTH: "/health",
  GET_PAIR_DATA: "/api/getPairCandleData",
  LEVERAGE_ENDPOINTS: {
    getLeverageSymbols: "/api/symbols/leverage",
    getHistoricalDataForPair: "/api/fetchHistoricalDataForPair",
  },
  RSI_ENDPOINTS: {
    getAllRSIValues: "/api/rsi/getValues",
    getLastRSIValues: "/api/rsi/getLastValues",
  },
  DATA_STORE: {
    getDataStore: "/api/getDataStore",
  },
};

export const BACKEND_URLS = {
  ROOT: PROJECT_URLS.BACKEND_URL,
  HEALTH: PROJECT_URLS.BACKEND_URL + BACKEND_ENDPOINTS.HEALTH,
  WEBSOCKET: PROJECT_URLS.BACKEND_WEBSOCKET,
  GET_PAIR_DATA: PROJECT_URLS.BACKEND_URL + BACKEND_ENDPOINTS.GET_PAIR_DATA,

  LEVERAGE_URLS: {
    getLeverageSymbols:
      PROJECT_URLS.BACKEND_URL +
      BACKEND_ENDPOINTS.LEVERAGE_ENDPOINTS.getLeverageSymbols,
    getHistoricalDataForPair:
      PROJECT_URLS.BACKEND_URL +
      BACKEND_ENDPOINTS.LEVERAGE_ENDPOINTS.getHistoricalDataForPair,
  },
  RSI_URLS: {
    getAllRSIValues:
      PROJECT_URLS.BACKEND_URL +
      BACKEND_ENDPOINTS.RSI_ENDPOINTS.getAllRSIValues,
    getLastRSIValues:
      PROJECT_URLS.BACKEND_URL +
      BACKEND_ENDPOINTS.RSI_ENDPOINTS.getLastRSIValues,
  },
  DATA_STORE: {
    getDataStore:
      PROJECT_URLS.BACKEND_URL + BACKEND_ENDPOINTS.DATA_STORE.getDataStore,
  },
};

export const CENTRALIZATION_ENDPOINTS = {
  USERS: "/users",
  STRIPE_CONFIG: "/config",
  STRIPE_CHECKOUT_SESSION: "/create_checkout_session",
  STRIPE_CHECK_SUBSCRIPTION: "/check-subscription-status",
  STRIPE_CANCEL_SUBSCRIPTION: "/cancel-subscription",
};

export const CENTRALIZATION_API_URLS = {
  USERS: PROJECT_URLS.CENTRALIZATION_URL + CENTRALIZATION_ENDPOINTS.USERS,
  STRIPE_CONFIG:
    PROJECT_URLS.CENTRALIZATION_URL + CENTRALIZATION_ENDPOINTS.STRIPE_CONFIG,
  STRIPE_CHECKOUT_SESSION:
    PROJECT_URLS.CENTRALIZATION_URL +
    CENTRALIZATION_ENDPOINTS.STRIPE_CHECKOUT_SESSION,
  STRIPE_CHECK_SUBSCRIPTION:
    PROJECT_URLS.CENTRALIZATION_URL +
    CENTRALIZATION_ENDPOINTS.STRIPE_CHECK_SUBSCRIPTION,
  STRIPE_CANCEL_SUBSCRIPTION:
    PROJECT_URLS.CENTRALIZATION_URL +
    CENTRALIZATION_ENDPOINTS.STRIPE_CANCEL_SUBSCRIPTION,
};

export const LIVE_BOT_ENDPOINTS = {
  HEALTH: "/health",
  startBot: "/api/startBot",
  stopBot: "/api/stopBot",
};
export const LIVE_BOT_URLS = {
  HEALTH: PROJECT_URLS.LIVE_BOT_URL + "/health",
  startBot: PROJECT_URLS.LIVE_BOT_URL + "/api/startBot",
  stopBot: PROJECT_URLS.LIVE_BOT_URL + "/api/stopBot",
  CONNECTION_WEBSOCKET:
    REMOTE_WSS_URL + ":" + SERVER_PORTS.LIVE_BOT_PORT + "/ws",
};

export const STRATEGY_ANALYZER_ENDPOINTS = {
  HEALTH: "/health",
  SIGNALS: {
    EMA28_SIGNALS: "/api/getEMA28Signals",
    RSI_SIGNALS: "/api/getRSISignals",
  },
  USERS_NOTIFICATIONS: {
    getUsersNotifications: "/api/getUsersNotifications",
    loadUserNotifications: "/api/loadUserNotifications",
    saveUserNotifications: "/api/saveUserNotifications",
    addNotification: "/api/addNotification",
    removeNotification: "/api/removeNotification", // Removed URL parameters
    updateNotification: "/api/updateNotification", // Removed URL parameters
    getNotification: "/api/getNotification", // Removed URL parameters
    getNotificationForPairAndTimeframe:
      "/api/getNotificationForPairAndTimeframe",
    markNotificationAsSent: "/api/markNotificationAsSent", // Removed URL parameters
    resetNotificationSentStatus: "/api/resetNotificationSentStatus", // Removed URL parameters
  },
  BACKTESTING: {
    startBacktest: "/api/startBacktest",
    getBacktestResults: "/api/getBacktestResults",
    backtestStreaming: "/backtestWS",
  },
};

export const STRATEGY_ANALYZER_URLS = {
  HEALTH:
    PROJECT_URLS.STRATEGY_ANALYZER_URL + STRATEGY_ANALYZER_ENDPOINTS.HEALTH,
  SIGNALS: {
    getEMA28Signals:
      PROJECT_URLS.STRATEGY_ANALYZER_URL +
      STRATEGY_ANALYZER_ENDPOINTS.SIGNALS.EMA28_SIGNALS,
    getRSISignals:
      PROJECT_URLS.STRATEGY_ANALYZER_URL +
      STRATEGY_ANALYZER_ENDPOINTS.SIGNALS.RSI_SIGNALS,
  },
  USERS_NOTIFICATIONS: {
    getUsersNotifications:
      PROJECT_URLS.STRATEGY_ANALYZER_URL +
      STRATEGY_ANALYZER_ENDPOINTS.USERS_NOTIFICATIONS.getUsersNotifications,
    loadUserNotifications:
      PROJECT_URLS.STRATEGY_ANALYZER_URL +
      STRATEGY_ANALYZER_ENDPOINTS.USERS_NOTIFICATIONS.loadUserNotifications,
    saveUserNotifications:
      PROJECT_URLS.STRATEGY_ANALYZER_URL +
      STRATEGY_ANALYZER_ENDPOINTS.USERS_NOTIFICATIONS.saveUserNotifications,
    addNotification:
      PROJECT_URLS.STRATEGY_ANALYZER_URL +
      STRATEGY_ANALYZER_ENDPOINTS.USERS_NOTIFICATIONS.addNotification,
    removeNotification:
      PROJECT_URLS.STRATEGY_ANALYZER_URL +
      STRATEGY_ANALYZER_ENDPOINTS.USERS_NOTIFICATIONS.removeNotification,
    updateNotification:
      PROJECT_URLS.STRATEGY_ANALYZER_URL +
      STRATEGY_ANALYZER_ENDPOINTS.USERS_NOTIFICATIONS.updateNotification,
    getNotification:
      PROJECT_URLS.STRATEGY_ANALYZER_URL +
      STRATEGY_ANALYZER_ENDPOINTS.USERS_NOTIFICATIONS.getNotification,
    getNotificationForPairAndTimeframe:
      PROJECT_URLS.STRATEGY_ANALYZER_URL +
      STRATEGY_ANALYZER_ENDPOINTS.USERS_NOTIFICATIONS
        .getNotificationForPairAndTimeframe,
    markNotificationAsSent:
      PROJECT_URLS.STRATEGY_ANALYZER_URL +
      STRATEGY_ANALYZER_ENDPOINTS.USERS_NOTIFICATIONS.markNotificationAsSent,
    resetNotificationSentStatus:
      PROJECT_URLS.STRATEGY_ANALYZER_URL +
      STRATEGY_ANALYZER_ENDPOINTS.USERS_NOTIFICATIONS
        .resetNotificationSentStatus,
  },
  BACKTESTING: {
    startBacktest:
      PROJECT_URLS.STRATEGY_ANALYZER_URL +
      STRATEGY_ANALYZER_ENDPOINTS.BACKTESTING.startBacktest,
    getBacktestResults:
      PROJECT_URLS.STRATEGY_ANALYZER_URL +
      STRATEGY_ANALYZER_ENDPOINTS.BACKTESTING.getBacktestResults,
    backtestStreaming:
      PROJECT_URLS.STRATEGY_ANALYZER_URL +
      STRATEGY_ANALYZER_ENDPOINTS.BACKTESTING.backtestStreaming,
  },
};
