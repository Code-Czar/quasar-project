name: Build and Release ASAR File

on:
  push:
    branches:
      - 'bt/app'
      - 'release/*'
      - 'feature/asar-build'

jobs:
  build_asar:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          yarn install
          yarn global add @quasar/cli

      - name: Build Quasar Electron app
        run: |
          yarn quasar build -m electron

      - name: Copy ASAR File
        run: |
          mkdir -p dist/asar_files
          cp dist/electron/Packaged/Quasar\ App-darwin-arm64/Quasar\ App.app/Contents/Resources/app.asar dist/asar_files/app.asar

      - name: Check ASAR File Size and SHA256
        run: |
          du -sh dist/asar_files/app.asar
          shasum -a 256 dist/asar_files/app.asar

      - name: Upload ASAR File Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-asar
          path: dist/asar_files/app.asar

  release:
    needs: build_asar
    runs-on: ubuntu-latest
    if: github.ref_name == 'bt/app'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download ASAR Artifact
        uses: actions/download-artifact@v4
        with:
          name: app-asar
          path: ./artifacts/asar

      - name: Compress ASAR File
        run: |
          cd ./artifacts/asar
          zip app-asar.zip app.asar
          du -sh app-asar.zip

      - name: Fetch All Tags
        run: |
          git fetch --tags

      - name: Calculate Next Tag Version
        id: tag_version
        run: |
          latest_tag=$(git describe --tags $(git rev-list --tags --max-count=1))
          echo "Latest tag: $latest_tag"
          IFS='.' read -r major minor patch <<<"${latest_tag#v}"
          new_tag="v$major.$minor.$((patch + 1))"
          echo "Next tag: $new_tag"
          echo "new_tag=$new_tag" >> $GITHUB_ENV

      - name: Create and Push New Tag
        env:
          NEW_TAG: ${{ env.new_tag }}
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag "$NEW_TAG"
          git push origin "$NEW_TAG"

      # Create GitHub Release for ASAR without Source Code attachments
      - name: Create GitHub Release without Source Code
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT_PUSH }}
        run: |
          gh release create ${{ env.new_tag }} ./artifacts/asar/app-asar.zip --title "ASAR Release - ${{ env.new_tag }}" --notes "Release of ASAR file only." --prerelease=false --draft=false
