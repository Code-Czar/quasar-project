name: Build and Release ASAR File

on:
  push:
    branches:
      - 'bt/app'
      - 'release/*'
      - 'feature/asar-build'

jobs:
  build_asar:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          yarn install
          yarn global add @quasar/cli

      - name: Build Quasar Electron app
        run: |
          yarn quasar build -m electron

      - name: Copy ASAR File
        run: |
          mkdir -p dist/asar_files
          cp dist/electron/Packaged/Quasar\ App-darwin-arm64/Quasar\ App.app/Contents/Resources/app.asar dist/asar_files/app.asar

      - name: Check ASAR File Size and SHA256
        run: |
          du -sh dist/asar_files/app.asar
          shasum -a 256 dist/asar_files/app.asar

      - name: Upload ASAR File Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-asar
          path: dist/asar_files/app.asar

  release:
    needs: build_asar
    runs-on: ubuntu-latest
    if: github.ref_name == 'bt/app'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download ASAR Artifact
        uses: actions/download-artifact@v4
        with:
          name: app-asar
          path: ./artifacts/asar

      - name: Compress ASAR File
        run: |
          cd ./artifacts/asar
          zip app-asar.zip app.asar  # Compress ASAR file into a .zip file
          du -sh app-asar.zip  # Check the size of the compressed file

      # Ensure the tag exists
      - name: Create Tag if Not Exists
        run: |
          git tag -l "${{ github.ref_name }}" || git tag "${{ github.ref_name }}"
          git push origin "${{ github.ref_name }}"

      # Create a GitHub release with the compressed ASAR file
      - name: Create GitHub Release for ASAR
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: ASAR Release - ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: ./artifacts/asar/app-asar.zip # Upload the compressed file
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT_PUSH }}
