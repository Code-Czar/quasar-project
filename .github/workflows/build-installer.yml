name: Build and Release Electron Installers

on:
  push:
    branches:
      - 'bt/installer' # Trigger this workflow only for pushes to bt/installer

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          yarn install
          yarn global add @quasar/cli

      - name: Build Quasar Electron app
        run: |
          yarn quasar build -m electron

      - name: Remove Unpacked folder (macOS only)
        if: matrix.os == 'macos-latest'
        run: |
          rm -rf dist/electron/Unpacked

      - name: Upload Installer Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: electron-installer-${{ matrix.os }}
          path: dist/electron/Packaged

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref_name == 'bt/installer'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: electron-installer-ubuntu-latest
          path: ./artifacts/ubuntu
      - uses: actions/download-artifact@v4
        with:
          name: electron-installer-macos-latest
          path: ./artifacts/macos
      - uses: actions/download-artifact@v4
        with:
          name: electron-installer-windows-latest
          path: ./artifacts/windows

      - name: Create GitHub Release for Installers
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Installer Release - ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT_PUSH }}

      - name: Upload Linux Installer
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/ubuntu
          asset_name: electron-installer-linux.zip
          asset_content_type: application/zip

      - name: Upload macOS Installer
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/macos
          asset_name: electron-installer-macos.zip
          asset_content_type: application/zip

      - name: Upload Windows Installer
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/windows
          asset_name: electron-installer-windows.zip
          asset_content_type: application/zip
