name: Build, Tag, and Release Electron Installers

on:
  push:
    branches:
      - 'main'
      - 'bt/installer'

jobs:
  build_and_release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: x64
          # - os: macos-latest
          #   arch: x64
          - os: macos-latest
            arch: arm64
          - os: windows-latest
            arch: x64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          yarn install
          yarn add -D @quasar/cli

      - name: Confirm Quasar CLI Installation
        run: |
          npx quasar --version

      - name: Set Tag Version
        id: set_tag
        shell: bash
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "::set-output name=new_tag::v$VERSION"
          echo "NEW_TAG=v$VERSION" >> $GITHUB_ENV

      - name: Create and Push Tag
        if: ${{ github.ref == 'refs/heads/main' }} # Only tag on the main branch
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GH_PAT_PUSH }}
        run: |
          TAG=$NEW_TAG
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "Tag $TAG already exists. Skipping tag creation."
          else
            git tag -a $TAG -m "Release $TAG"
            git push origin $TAG
          fi

      - name: Build Quasar Electron app
        env:
          GH_TOKEN: ${{ secrets.GH_PAT_PUSH }}
        run: |
          npx quasar build -m electron

      - name: List Generated Files
        run: |
          echo "Files generated in dist/electron/Packaged:"
          ls -R dist/electron/Packaged

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.set_tag.outputs.new_tag }}
          name: 'Release ${{ steps.set_tag.outputs.new_tag }}'
          files: |
            dist/electron/Packaged/*.AppImage
            dist/electron/Packaged/*.zip
            dist/electron/Packaged/*.dmg
            dist/electron/Packaged/*.exe
            dist/electron/Packaged/*.yml
            dist/electron/Packaged/*.blockmap
            dist/electron/Packaged/*.app
            dist/electrong/Packaged/mac/*.app
            dist/electrong/Packaged/mac-arm64/*.app
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT_PUSH }}
